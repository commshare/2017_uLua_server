// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_dial_lottery.proto

#ifndef PROTOBUF_client2world_5fdial_5flottery_2eproto__INCLUDED
#define PROTOBUF_client2world_5fdial_5flottery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client2world_msg_type.pb.h"
#include "msg_type_def.pb.h"
#include "msg_info_def.pb.h"
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client2world_5fdial_5flottery_2eproto();
void protobuf_AssignDesc_client2world_5fdial_5flottery_2eproto();
void protobuf_ShutdownFile_client2world_5fdial_5flottery_2eproto();

class packetc2w_req_dial_lottery;
class packetw2c_req_dial_lottery_result;
class packetc2w_req_dial_lottery_flag;
class packetw2c_req_dial_lottery_flag_result;
class packetc2w_req_month_card_reward;
class packetw2c_req_month_card_reward_result;

// ===================================================================

class packetc2w_req_dial_lottery : public ::google::protobuf::Message {
 public:
  packetc2w_req_dial_lottery();
  virtual ~packetc2w_req_dial_lottery();

  packetc2w_req_dial_lottery(const packetc2w_req_dial_lottery& from);

  inline packetc2w_req_dial_lottery& operator=(const packetc2w_req_dial_lottery& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_req_dial_lottery& default_instance();

  void Swap(packetc2w_req_dial_lottery* other);

  // implements Message ----------------------------------------------

  packetc2w_req_dial_lottery* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_req_dial_lottery& from);
  void MergeFrom(const packetc2w_req_dial_lottery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_dial_lottery];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_req_dial_lottery)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  friend void  protobuf_AddDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_AssignDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fdial_5flottery_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_req_dial_lottery* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_req_dial_lottery_result : public ::google::protobuf::Message {
 public:
  packetw2c_req_dial_lottery_result();
  virtual ~packetw2c_req_dial_lottery_result();

  packetw2c_req_dial_lottery_result(const packetw2c_req_dial_lottery_result& from);

  inline packetw2c_req_dial_lottery_result& operator=(const packetw2c_req_dial_lottery_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_req_dial_lottery_result& default_instance();

  void Swap(packetw2c_req_dial_lottery_result* other);

  // implements Message ----------------------------------------------

  packetw2c_req_dial_lottery_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_req_dial_lottery_result& from);
  void MergeFrom(const packetw2c_req_dial_lottery_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_dial_lottery_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);

  // optional bool hasMonthCardReward = 4;
  inline bool has_hasmonthcardreward() const;
  inline void clear_hasmonthcardreward();
  static const int kHasMonthCardRewardFieldNumber = 4;
  inline bool hasmonthcardreward() const;
  inline void set_hasmonthcardreward(bool value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_req_dial_lottery_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_hasmonthcardreward();
  inline void clear_has_hasmonthcardreward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 num_;
  bool hasmonthcardreward_;
  friend void  protobuf_AddDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_AssignDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fdial_5flottery_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_req_dial_lottery_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_req_dial_lottery_flag : public ::google::protobuf::Message {
 public:
  packetc2w_req_dial_lottery_flag();
  virtual ~packetc2w_req_dial_lottery_flag();

  packetc2w_req_dial_lottery_flag(const packetc2w_req_dial_lottery_flag& from);

  inline packetc2w_req_dial_lottery_flag& operator=(const packetc2w_req_dial_lottery_flag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_req_dial_lottery_flag& default_instance();

  void Swap(packetc2w_req_dial_lottery_flag* other);

  // implements Message ----------------------------------------------

  packetc2w_req_dial_lottery_flag* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_req_dial_lottery_flag& from);
  void MergeFrom(const packetc2w_req_dial_lottery_flag& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_dial_lottery_flag];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_req_dial_lottery_flag)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  friend void  protobuf_AddDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_AssignDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fdial_5flottery_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_req_dial_lottery_flag* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_req_dial_lottery_flag_result : public ::google::protobuf::Message {
 public:
  packetw2c_req_dial_lottery_flag_result();
  virtual ~packetw2c_req_dial_lottery_flag_result();

  packetw2c_req_dial_lottery_flag_result(const packetw2c_req_dial_lottery_flag_result& from);

  inline packetw2c_req_dial_lottery_flag_result& operator=(const packetw2c_req_dial_lottery_flag_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_req_dial_lottery_flag_result& default_instance();

  void Swap(packetw2c_req_dial_lottery_flag_result* other);

  // implements Message ----------------------------------------------

  packetw2c_req_dial_lottery_flag_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_req_dial_lottery_flag_result& from);
  void MergeFrom(const packetw2c_req_dial_lottery_flag_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_dial_lottery_flag_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // optional bool isLotteryToday = 2;
  inline bool has_islotterytoday() const;
  inline void clear_islotterytoday();
  static const int kIsLotteryTodayFieldNumber = 2;
  inline bool islotterytoday() const;
  inline void set_islotterytoday(bool value);

  // optional int32 hasSignCount = 3;
  inline bool has_hassigncount() const;
  inline void clear_hassigncount();
  static const int kHasSignCountFieldNumber = 3;
  inline ::google::protobuf::int32 hassigncount() const;
  inline void set_hassigncount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_req_dial_lottery_flag_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_islotterytoday();
  inline void clear_has_islotterytoday();
  inline void set_has_hassigncount();
  inline void clear_has_hassigncount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  bool islotterytoday_;
  ::google::protobuf::int32 hassigncount_;
  friend void  protobuf_AddDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_AssignDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fdial_5flottery_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_req_dial_lottery_flag_result* default_instance_;
};
// -------------------------------------------------------------------

class packetc2w_req_month_card_reward : public ::google::protobuf::Message {
 public:
  packetc2w_req_month_card_reward();
  virtual ~packetc2w_req_month_card_reward();

  packetc2w_req_month_card_reward(const packetc2w_req_month_card_reward& from);

  inline packetc2w_req_month_card_reward& operator=(const packetc2w_req_month_card_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetc2w_req_month_card_reward& default_instance();

  void Swap(packetc2w_req_month_card_reward* other);

  // implements Message ----------------------------------------------

  packetc2w_req_month_card_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetc2w_req_month_card_reward& from);
  void MergeFrom(const packetc2w_req_month_card_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_month_card_reward];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetc2w_req_month_card_reward)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  friend void  protobuf_AddDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_AssignDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fdial_5flottery_2eproto();

  void InitAsDefaultInstance();
  static packetc2w_req_month_card_reward* default_instance_;
};
// -------------------------------------------------------------------

class packetw2c_req_month_card_reward_result : public ::google::protobuf::Message {
 public:
  packetw2c_req_month_card_reward_result();
  virtual ~packetw2c_req_month_card_reward_result();

  packetw2c_req_month_card_reward_result(const packetw2c_req_month_card_reward_result& from);

  inline packetw2c_req_month_card_reward_result& operator=(const packetw2c_req_month_card_reward_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packetw2c_req_month_card_reward_result& default_instance();

  void Swap(packetw2c_req_month_card_reward_result* other);

  // implements Message ----------------------------------------------

  packetw2c_req_month_card_reward_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packetw2c_req_month_card_reward_result& from);
  void MergeFrom(const packetw2c_req_month_card_reward_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_month_card_reward_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packetw2c_req_month_card_reward_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  ::google::protobuf::int32 result_;
  friend void  protobuf_AddDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_AssignDesc_client2world_5fdial_5flottery_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fdial_5flottery_2eproto();

  void InitAsDefaultInstance();
  static packetw2c_req_month_card_reward_result* default_instance_;
};
// ===================================================================


// ===================================================================

// packetc2w_req_dial_lottery

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_dial_lottery];
inline bool packetc2w_req_dial_lottery::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_req_dial_lottery::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_req_dial_lottery::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_req_dial_lottery::clear_packet_id() {
  packet_id_ = 5009;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_req_dial_lottery::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetc2w_req_dial_lottery.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_req_dial_lottery::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetc2w_req_dial_lottery.packet_id)
}

// -------------------------------------------------------------------

// packetw2c_req_dial_lottery_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_dial_lottery_result];
inline bool packetw2c_req_dial_lottery_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_req_dial_lottery_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_req_dial_lottery_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_req_dial_lottery_result::clear_packet_id() {
  packet_id_ = 7508;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_req_dial_lottery_result::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_dial_lottery_result.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_req_dial_lottery_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_dial_lottery_result.packet_id)
}

// optional int32 result = 2;
inline bool packetw2c_req_dial_lottery_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetw2c_req_dial_lottery_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetw2c_req_dial_lottery_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetw2c_req_dial_lottery_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetw2c_req_dial_lottery_result::result() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_dial_lottery_result.result)
  return result_;
}
inline void packetw2c_req_dial_lottery_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_dial_lottery_result.result)
}

// optional int32 num = 3;
inline bool packetw2c_req_dial_lottery_result::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetw2c_req_dial_lottery_result::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetw2c_req_dial_lottery_result::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetw2c_req_dial_lottery_result::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 packetw2c_req_dial_lottery_result::num() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_dial_lottery_result.num)
  return num_;
}
inline void packetw2c_req_dial_lottery_result::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_dial_lottery_result.num)
}

// optional bool hasMonthCardReward = 4;
inline bool packetw2c_req_dial_lottery_result::has_hasmonthcardreward() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void packetw2c_req_dial_lottery_result::set_has_hasmonthcardreward() {
  _has_bits_[0] |= 0x00000008u;
}
inline void packetw2c_req_dial_lottery_result::clear_has_hasmonthcardreward() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void packetw2c_req_dial_lottery_result::clear_hasmonthcardreward() {
  hasmonthcardreward_ = false;
  clear_has_hasmonthcardreward();
}
inline bool packetw2c_req_dial_lottery_result::hasmonthcardreward() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_dial_lottery_result.hasMonthCardReward)
  return hasmonthcardreward_;
}
inline void packetw2c_req_dial_lottery_result::set_hasmonthcardreward(bool value) {
  set_has_hasmonthcardreward();
  hasmonthcardreward_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_dial_lottery_result.hasMonthCardReward)
}

// -------------------------------------------------------------------

// packetc2w_req_dial_lottery_flag

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_dial_lottery_flag];
inline bool packetc2w_req_dial_lottery_flag::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_req_dial_lottery_flag::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_req_dial_lottery_flag::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_req_dial_lottery_flag::clear_packet_id() {
  packet_id_ = 5019;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_req_dial_lottery_flag::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetc2w_req_dial_lottery_flag.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_req_dial_lottery_flag::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetc2w_req_dial_lottery_flag.packet_id)
}

// -------------------------------------------------------------------

// packetw2c_req_dial_lottery_flag_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_dial_lottery_flag_result];
inline bool packetw2c_req_dial_lottery_flag_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_req_dial_lottery_flag_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_req_dial_lottery_flag_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_req_dial_lottery_flag_result::clear_packet_id() {
  packet_id_ = 7520;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_req_dial_lottery_flag_result::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_dial_lottery_flag_result.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_req_dial_lottery_flag_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_dial_lottery_flag_result.packet_id)
}

// optional bool isLotteryToday = 2;
inline bool packetw2c_req_dial_lottery_flag_result::has_islotterytoday() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetw2c_req_dial_lottery_flag_result::set_has_islotterytoday() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetw2c_req_dial_lottery_flag_result::clear_has_islotterytoday() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetw2c_req_dial_lottery_flag_result::clear_islotterytoday() {
  islotterytoday_ = false;
  clear_has_islotterytoday();
}
inline bool packetw2c_req_dial_lottery_flag_result::islotterytoday() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_dial_lottery_flag_result.isLotteryToday)
  return islotterytoday_;
}
inline void packetw2c_req_dial_lottery_flag_result::set_islotterytoday(bool value) {
  set_has_islotterytoday();
  islotterytoday_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_dial_lottery_flag_result.isLotteryToday)
}

// optional int32 hasSignCount = 3;
inline bool packetw2c_req_dial_lottery_flag_result::has_hassigncount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void packetw2c_req_dial_lottery_flag_result::set_has_hassigncount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void packetw2c_req_dial_lottery_flag_result::clear_has_hassigncount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void packetw2c_req_dial_lottery_flag_result::clear_hassigncount() {
  hassigncount_ = 0;
  clear_has_hassigncount();
}
inline ::google::protobuf::int32 packetw2c_req_dial_lottery_flag_result::hassigncount() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_dial_lottery_flag_result.hasSignCount)
  return hassigncount_;
}
inline void packetw2c_req_dial_lottery_flag_result::set_hassigncount(::google::protobuf::int32 value) {
  set_has_hassigncount();
  hassigncount_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_dial_lottery_flag_result.hasSignCount)
}

// -------------------------------------------------------------------

// packetc2w_req_month_card_reward

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_req_month_card_reward];
inline bool packetc2w_req_month_card_reward::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetc2w_req_month_card_reward::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetc2w_req_month_card_reward::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetc2w_req_month_card_reward::clear_packet_id() {
  packet_id_ = 5064;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetc2w_req_month_card_reward::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetc2w_req_month_card_reward.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetc2w_req_month_card_reward::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetc2w_req_month_card_reward.packet_id)
}

// -------------------------------------------------------------------

// packetw2c_req_month_card_reward_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_req_month_card_reward_result];
inline bool packetw2c_req_month_card_reward_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packetw2c_req_month_card_reward_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packetw2c_req_month_card_reward_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packetw2c_req_month_card_reward_result::clear_packet_id() {
  packet_id_ = 7568;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packetw2c_req_month_card_reward_result::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_month_card_reward_result.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packetw2c_req_month_card_reward_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_month_card_reward_result.packet_id)
}

// optional int32 result = 2;
inline bool packetw2c_req_month_card_reward_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packetw2c_req_month_card_reward_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packetw2c_req_month_card_reward_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packetw2c_req_month_card_reward_result::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 packetw2c_req_month_card_reward_result::result() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packetw2c_req_month_card_reward_result.result)
  return result_;
}
inline void packetw2c_req_month_card_reward_result::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packetw2c_req_month_card_reward_result.result)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client2world_5fdial_5flottery_2eproto__INCLUDED
