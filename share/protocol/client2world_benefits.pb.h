// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_benefits.proto

#ifndef PROTOBUF_client2world_5fbenefits_2eproto__INCLUDED
#define PROTOBUF_client2world_5fbenefits_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "client2world_msg_type.pb.h"
#include "msg_type_def.pb.h"
#include "msg_info_def.pb.h"
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_client2world_5fbenefits_2eproto();
void protobuf_AssignDesc_client2world_5fbenefits_2eproto();
void protobuf_ShutdownFile_client2world_5fbenefits_2eproto();

class packet_c2w_benefits;
class packet_w2c_benefits_result;

// ===================================================================

class packet_c2w_benefits : public ::google::protobuf::Message {
 public:
  packet_c2w_benefits();
  virtual ~packet_c2w_benefits();

  packet_c2w_benefits(const packet_c2w_benefits& from);

  inline packet_c2w_benefits& operator=(const packet_c2w_benefits& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packet_c2w_benefits& default_instance();

  void Swap(packet_c2w_benefits* other);

  // implements Message ----------------------------------------------

  packet_c2w_benefits* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packet_c2w_benefits& from);
  void MergeFrom(const packet_c2w_benefits& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_beneifts];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packet_c2w_benefits)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  friend void  protobuf_AddDesc_client2world_5fbenefits_2eproto();
  friend void protobuf_AssignDesc_client2world_5fbenefits_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fbenefits_2eproto();

  void InitAsDefaultInstance();
  static packet_c2w_benefits* default_instance_;
};
// -------------------------------------------------------------------

class packet_w2c_benefits_result : public ::google::protobuf::Message {
 public:
  packet_w2c_benefits_result();
  virtual ~packet_w2c_benefits_result();

  packet_w2c_benefits_result(const packet_w2c_benefits_result& from);

  inline packet_w2c_benefits_result& operator=(const packet_w2c_benefits_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packet_w2c_benefits_result& default_instance();

  void Swap(packet_w2c_benefits_result* other);

  // implements Message ----------------------------------------------

  packet_w2c_benefits_result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packet_w2c_benefits_result& from);
  void MergeFrom(const packet_w2c_benefits_result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benefits_result];
  inline bool has_packet_id() const;
  inline void clear_packet_id();
  static const int kPacketIdFieldNumber = 1;
  inline ::client2world_protocols::e_server_msg_type packet_id() const;
  inline void set_packet_id(::client2world_protocols::e_server_msg_type value);

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::msg_type_def::e_msg_result_def result() const;
  inline void set_result(::msg_type_def::e_msg_result_def value);

  // @@protoc_insertion_point(class_scope:client2world_protocols.packet_w2c_benefits_result)
 private:
  inline void set_has_packet_id();
  inline void clear_has_packet_id();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int packet_id_;
  int result_;
  friend void  protobuf_AddDesc_client2world_5fbenefits_2eproto();
  friend void protobuf_AssignDesc_client2world_5fbenefits_2eproto();
  friend void protobuf_ShutdownFile_client2world_5fbenefits_2eproto();

  void InitAsDefaultInstance();
  static packet_w2c_benefits_result* default_instance_;
};
// ===================================================================


// ===================================================================

// packet_c2w_benefits

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_beneifts];
inline bool packet_c2w_benefits::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packet_c2w_benefits::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packet_c2w_benefits::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packet_c2w_benefits::clear_packet_id() {
  packet_id_ = 5037;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packet_c2w_benefits::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packet_c2w_benefits.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packet_c2w_benefits::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packet_c2w_benefits.packet_id)
}

// -------------------------------------------------------------------

// packet_w2c_benefits_result

// optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benefits_result];
inline bool packet_w2c_benefits_result::has_packet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void packet_w2c_benefits_result::set_has_packet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void packet_w2c_benefits_result::clear_has_packet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void packet_w2c_benefits_result::clear_packet_id() {
  packet_id_ = 7539;
  clear_has_packet_id();
}
inline ::client2world_protocols::e_server_msg_type packet_w2c_benefits_result::packet_id() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packet_w2c_benefits_result.packet_id)
  return static_cast< ::client2world_protocols::e_server_msg_type >(packet_id_);
}
inline void packet_w2c_benefits_result::set_packet_id(::client2world_protocols::e_server_msg_type value) {
  assert(::client2world_protocols::e_server_msg_type_IsValid(value));
  set_has_packet_id();
  packet_id_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packet_w2c_benefits_result.packet_id)
}

// optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
inline bool packet_w2c_benefits_result::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void packet_w2c_benefits_result::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void packet_w2c_benefits_result::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void packet_w2c_benefits_result::clear_result() {
  result_ = 2;
  clear_has_result();
}
inline ::msg_type_def::e_msg_result_def packet_w2c_benefits_result::result() const {
  // @@protoc_insertion_point(field_get:client2world_protocols.packet_w2c_benefits_result.result)
  return static_cast< ::msg_type_def::e_msg_result_def >(result_);
}
inline void packet_w2c_benefits_result::set_result(::msg_type_def::e_msg_result_def value) {
  assert(::msg_type_def::e_msg_result_def_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:client2world_protocols.packet_w2c_benefits_result.result)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_client2world_5fbenefits_2eproto__INCLUDED
