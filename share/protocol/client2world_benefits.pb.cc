// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_benefits.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client2world_benefits.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

namespace {

const ::google::protobuf::Descriptor* packet_c2w_benefits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packet_c2w_benefits_reflection_ = NULL;
const ::google::protobuf::Descriptor* packet_w2c_benefits_result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  packet_w2c_benefits_result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_client2world_5fbenefits_2eproto() {
  protobuf_AddDesc_client2world_5fbenefits_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client2world_benefits.proto");
  GOOGLE_CHECK(file != NULL);
  packet_c2w_benefits_descriptor_ = file->message_type(0);
  static const int packet_c2w_benefits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packet_c2w_benefits, packet_id_),
  };
  packet_c2w_benefits_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packet_c2w_benefits_descriptor_,
      packet_c2w_benefits::default_instance_,
      packet_c2w_benefits_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packet_c2w_benefits, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packet_c2w_benefits, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packet_c2w_benefits));
  packet_w2c_benefits_result_descriptor_ = file->message_type(1);
  static const int packet_w2c_benefits_result_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packet_w2c_benefits_result, packet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packet_w2c_benefits_result, result_),
  };
  packet_w2c_benefits_result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      packet_w2c_benefits_result_descriptor_,
      packet_w2c_benefits_result::default_instance_,
      packet_w2c_benefits_result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packet_w2c_benefits_result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(packet_w2c_benefits_result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(packet_w2c_benefits_result));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client2world_5fbenefits_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packet_c2w_benefits_descriptor_, &packet_c2w_benefits::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    packet_w2c_benefits_result_descriptor_, &packet_w2c_benefits_result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_client2world_5fbenefits_2eproto() {
  delete packet_c2w_benefits::default_instance_;
  delete packet_c2w_benefits_reflection_;
  delete packet_w2c_benefits_result::default_instance_;
  delete packet_w2c_benefits_result_reflection_;
}

void protobuf_AddDesc_client2world_5fbenefits_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::client2world_protocols::protobuf_AddDesc_client2world_5fmsg_5ftype_2eproto();
  ::msg_type_def::protobuf_AddDesc_msg_5ftype_5fdef_2eproto();
  ::msg_info_def::protobuf_AddDesc_msg_5finfo_5fdef_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033client2world_benefits.proto\022\026client2wo"
    "rld_protocols\032\033client2world_msg_type.pro"
    "to\032\022msg_type_def.proto\032\022msg_info_def.pro"
    "to\"g\n\023packet_c2w_benefits\022P\n\tpacket_id\030\001"
    " \001(\0162).client2world_protocols.e_server_m"
    "sg_type:\022e_mst_c2w_beneifts\"\261\001\n\032packet_w"
    "2c_benefits_result\022W\n\tpacket_id\030\001 \001(\0162)."
    "client2world_protocols.e_server_msg_type"
    ":\031e_mst_w2c_benefits_result\022:\n\006result\030\002 "
    "\001(\0162\036.msg_type_def.e_msg_result_def:\ne_r"
    "mt_fail", 407);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client2world_benefits.proto", &protobuf_RegisterTypes);
  packet_c2w_benefits::default_instance_ = new packet_c2w_benefits();
  packet_w2c_benefits_result::default_instance_ = new packet_w2c_benefits_result();
  packet_c2w_benefits::default_instance_->InitAsDefaultInstance();
  packet_w2c_benefits_result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client2world_5fbenefits_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client2world_5fbenefits_2eproto {
  StaticDescriptorInitializer_client2world_5fbenefits_2eproto() {
    protobuf_AddDesc_client2world_5fbenefits_2eproto();
  }
} static_descriptor_initializer_client2world_5fbenefits_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int packet_c2w_benefits::kPacketIdFieldNumber;
#endif  // !_MSC_VER

packet_c2w_benefits::packet_c2w_benefits()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:client2world_protocols.packet_c2w_benefits)
}

void packet_c2w_benefits::InitAsDefaultInstance() {
}

packet_c2w_benefits::packet_c2w_benefits(const packet_c2w_benefits& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:client2world_protocols.packet_c2w_benefits)
}

void packet_c2w_benefits::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 5037;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packet_c2w_benefits::~packet_c2w_benefits() {
  // @@protoc_insertion_point(destructor:client2world_protocols.packet_c2w_benefits)
  SharedDtor();
}

void packet_c2w_benefits::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packet_c2w_benefits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packet_c2w_benefits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packet_c2w_benefits_descriptor_;
}

const packet_c2w_benefits& packet_c2w_benefits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fbenefits_2eproto();
  return *default_instance_;
}

packet_c2w_benefits* packet_c2w_benefits::default_instance_ = NULL;

packet_c2w_benefits* packet_c2w_benefits::New() const {
  return new packet_c2w_benefits;
}

void packet_c2w_benefits::Clear() {
  packet_id_ = 5037;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packet_c2w_benefits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:client2world_protocols.packet_c2w_benefits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_beneifts];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:client2world_protocols.packet_c2w_benefits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:client2world_protocols.packet_c2w_benefits)
  return false;
#undef DO_
}

void packet_c2w_benefits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:client2world_protocols.packet_c2w_benefits)
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_beneifts];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:client2world_protocols.packet_c2w_benefits)
}

::google::protobuf::uint8* packet_c2w_benefits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:client2world_protocols.packet_c2w_benefits)
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_beneifts];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client2world_protocols.packet_c2w_benefits)
  return target;
}

int packet_c2w_benefits::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_c2w_beneifts];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packet_c2w_benefits::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packet_c2w_benefits* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packet_c2w_benefits*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packet_c2w_benefits::MergeFrom(const packet_c2w_benefits& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packet_c2w_benefits::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packet_c2w_benefits::CopyFrom(const packet_c2w_benefits& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packet_c2w_benefits::IsInitialized() const {

  return true;
}

void packet_c2w_benefits::Swap(packet_c2w_benefits* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packet_c2w_benefits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packet_c2w_benefits_descriptor_;
  metadata.reflection = packet_c2w_benefits_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int packet_w2c_benefits_result::kPacketIdFieldNumber;
const int packet_w2c_benefits_result::kResultFieldNumber;
#endif  // !_MSC_VER

packet_w2c_benefits_result::packet_w2c_benefits_result()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:client2world_protocols.packet_w2c_benefits_result)
}

void packet_w2c_benefits_result::InitAsDefaultInstance() {
}

packet_w2c_benefits_result::packet_w2c_benefits_result(const packet_w2c_benefits_result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:client2world_protocols.packet_w2c_benefits_result)
}

void packet_w2c_benefits_result::SharedCtor() {
  _cached_size_ = 0;
  packet_id_ = 7539;
  result_ = 2;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

packet_w2c_benefits_result::~packet_w2c_benefits_result() {
  // @@protoc_insertion_point(destructor:client2world_protocols.packet_w2c_benefits_result)
  SharedDtor();
}

void packet_w2c_benefits_result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void packet_w2c_benefits_result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* packet_w2c_benefits_result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return packet_w2c_benefits_result_descriptor_;
}

const packet_w2c_benefits_result& packet_w2c_benefits_result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_client2world_5fbenefits_2eproto();
  return *default_instance_;
}

packet_w2c_benefits_result* packet_w2c_benefits_result::default_instance_ = NULL;

packet_w2c_benefits_result* packet_w2c_benefits_result::New() const {
  return new packet_w2c_benefits_result;
}

void packet_w2c_benefits_result::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    packet_id_ = 7539;
    result_ = 2;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool packet_w2c_benefits_result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:client2world_protocols.packet_w2c_benefits_result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benefits_result];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::client2world_protocols::e_server_msg_type_IsValid(value)) {
            set_packet_id(static_cast< ::client2world_protocols::e_server_msg_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }

      // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
      case 2: {
        if (tag == 16) {
         parse_result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msg_type_def::e_msg_result_def_IsValid(value)) {
            set_result(static_cast< ::msg_type_def::e_msg_result_def >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:client2world_protocols.packet_w2c_benefits_result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:client2world_protocols.packet_w2c_benefits_result)
  return false;
#undef DO_
}

void packet_w2c_benefits_result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:client2world_protocols.packet_w2c_benefits_result)
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benefits_result];
  if (has_packet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->packet_id(), output);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->result(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:client2world_protocols.packet_w2c_benefits_result)
}

::google::protobuf::uint8* packet_w2c_benefits_result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:client2world_protocols.packet_w2c_benefits_result)
  // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benefits_result];
  if (has_packet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->packet_id(), target);
  }

  // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->result(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:client2world_protocols.packet_w2c_benefits_result)
  return target;
}

int packet_w2c_benefits_result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .client2world_protocols.e_server_msg_type packet_id = 1 [default = e_mst_w2c_benefits_result];
    if (has_packet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->packet_id());
    }

    // optional .msg_type_def.e_msg_result_def result = 2 [default = e_rmt_fail];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void packet_w2c_benefits_result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const packet_w2c_benefits_result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const packet_w2c_benefits_result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void packet_w2c_benefits_result::MergeFrom(const packet_w2c_benefits_result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_id()) {
      set_packet_id(from.packet_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void packet_w2c_benefits_result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void packet_w2c_benefits_result::CopyFrom(const packet_w2c_benefits_result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool packet_w2c_benefits_result::IsInitialized() const {

  return true;
}

void packet_w2c_benefits_result::Swap(packet_w2c_benefits_result* other) {
  if (other != this) {
    std::swap(packet_id_, other->packet_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata packet_w2c_benefits_result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = packet_w2c_benefits_result_descriptor_;
  metadata.reflection = packet_w2c_benefits_result_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

// @@protoc_insertion_point(global_scope)
