// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_landlord_def.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game_landlord_def.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace game_landlord_protocol {

namespace {

const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_server_error_code_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_game_state_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* e_player_game_state_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_5flandlord_5fdef_2eproto() {
  protobuf_AddDesc_game_5flandlord_5fdef_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game_landlord_def.proto");
  GOOGLE_CHECK(file != NULL);
  e_server_msg_type_descriptor_ = file->enum_type(0);
  e_server_error_code_descriptor_ = file->enum_type(1);
  e_game_state_descriptor_ = file->enum_type(2);
  e_player_game_state_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_5flandlord_5fdef_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_game_5flandlord_5fdef_2eproto() {
}

void protobuf_AddDesc_game_5flandlord_5fdef_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027game_landlord_def.proto\022\026game_landlord"
    "_protocol*\201\005\n\021e_server_msg_type\022\024\n\017e_mst"
    "_start_c2l\020\220N\022\031\n\024e_mst_c2l_enter_room\020\221N"
    "\022\"\n\035e_mst_c2l_get_room_scene_info\020\222N\022\032\n\025"
    "e_mst_c2l_check_state\020\223N\022\031\n\024e_mst_c2l_le"
    "ave_room\020\224N\022\033\n\026e_mst_c2l_rob_landlord\020\225N"
    "\022\027\n\022e_mst_c2l_playhand\020\226N\022\032\n\025e_mst_c2l_s"
    "tart_match\020\227N\022\024\n\017e_mst_start_l2c\020\230u\022\031\n\024e"
    "_mst_l2c_enter_room\020\231u\022\"\n\035e_mst_l2c_get_"
    "room_scene_info\020\232u\022\032\n\025e_mst_l2c_check_st"
    "ate\020\233u\022\031\n\024e_mst_l2c_leave_room\020\234u\022\027\n\022e_m"
    "st_l2c_playhand\020\235u\022!\n\034e_mst_l2c_start_ma"
    "tch_result\020\236u\022\037\n\032e_mst_l2c_notice_startg"
    "ame\020\375u\022\036\n\031e_mst_l2c_notice_playhand\020\376u\022\""
    "\n\035e_mst_l2c_notice_rob_landlord\020\377u\022\035\n\030e_"
    "mst_l2c_notice_winlose\020\200v\022)\n$e_mst_l2c_n"
    "otice_rob_landlord_result\020\201v\022\027\n\021e_mst_cl"
    "end_index\020\240\234\001*k\n\023e_server_error_code\022\030\n\024"
    "e_error_code_success\020\001\022\027\n\023e_error_code_f"
    "ailed\020\002\022!\n\035e_error_code_not_enough_money"
    "\020\003*\313\001\n\014e_game_state\022\025\n\021e_game_state_none"
    "\020\000\022\031\n\025e_game_state_matching\020\001\022\032\n\026e_game_"
    "state_startgame\020\002\022\034\n\030e_game_state_sendca"
    "rding\020\003\022\034\n\030e_game_state_robLandlore\020\004\022\031\n"
    "\025e_game_state_playhand\020\005\022\026\n\022e_game_state"
    "_award\020\006*\274\002\n\023e_player_game_state\022\034\n\030e_pl"
    "ayer_game_state_none\020\000\022 \n\034e_player_game_"
    "state_matching\020\001\022#\n\037e_player_game_state_"
    "sendcarding\020\002\022#\n\037e_player_game_state_rob"
    "Landlord\020\003\022)\n%e_player_game_state_other_"
    "robLandlord\020\004\022#\n\037e_player_game_state_pla"
    "yhanding\020\005\022)\n%e_player_game_state_other_"
    "playhanding\020\006\022 \n\034e_player_game_state_awa"
    "rding\020\007", 1327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game_landlord_def.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_5flandlord_5fdef_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_5flandlord_5fdef_2eproto {
  StaticDescriptorInitializer_game_5flandlord_5fdef_2eproto() {
    protobuf_AddDesc_game_5flandlord_5fdef_2eproto();
  }
} static_descriptor_initializer_game_5flandlord_5fdef_2eproto_;
const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_server_msg_type_descriptor_;
}
bool e_server_msg_type_IsValid(int value) {
  switch(value) {
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 15000:
    case 15001:
    case 15002:
    case 15003:
    case 15004:
    case 15005:
    case 15006:
    case 15101:
    case 15102:
    case 15103:
    case 15104:
    case 15105:
    case 20000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_server_error_code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_server_error_code_descriptor_;
}
bool e_server_error_code_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_game_state_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_game_state_descriptor_;
}
bool e_game_state_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* e_player_game_state_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_player_game_state_descriptor_;
}
bool e_player_game_state_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace game_landlord_protocol

// @@protoc_insertion_point(global_scope)
