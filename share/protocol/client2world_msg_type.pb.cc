// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client2world_msg_type.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client2world_msg_type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace client2world_protocols {

namespace {

const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_client2world_5fmsg_5ftype_2eproto() {
  protobuf_AddDesc_client2world_5fmsg_5ftype_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "client2world_msg_type.proto");
  GOOGLE_CHECK(file != NULL);
  e_server_msg_type_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_client2world_5fmsg_5ftype_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_client2world_5fmsg_5ftype_2eproto() {
}

void protobuf_AddDesc_client2world_5fmsg_5ftype_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033client2world_msg_type.proto\022\026client2wo"
    "rld_protocols*\246)\n\021e_server_msg_type\022\024\n\017e"
    "_mst_start_c2w\020\210\'\022\035\n\030e_mst_c2w_player_co"
    "nnect\020\211\'\022\027\n\022e_mst_c2w_timesync\020\212\'\022\027\n\022e_m"
    "st_c2w_asklogin\020\213\'\022\031\n\024e_mst_c2w_enter_ga"
    "me\020\214\'\022\026\n\021e_mst_c2w_command\020\215\'\022 \n\033e_mst_c"
    "2w_ask_check_payment\020\216\'\022\037\n\032e_mst_c2w_ask"
    "_test_payment\020\217\'\022\031\n\024e_mst_c2w_leave_game"
    "\020\220\'\022\037\n\032e_mst_c2w_req_dial_lottery\020\221\'\022 \n\033"
    "e_mst_c2w_update_playerhead\020\222\'\022\036\n\031e_mst_"
    "c2w_update_nickname\020\223\'\022\031\n\024e_mst_c2w_upda"
    "te_sex\020\224\'\022\037\n\032e_mst_c2w_update_signature\020"
    "\225\'\022\030\n\023e_mst_c2w_get_mails\020\226\'\022\036\n\031e_mst_c2"
    "w_recv_mail_gifts\020\227\'\022\030\n\023e_mst_c2w_send_m"
    "ail\020\230\'\022\032\n\025e_mst_c2w_remove_mail\020\231\'\022\034\n\027e_"
    "mst_c2w_req_game_stat\020\232\'\022$\n\037e_mst_c2w_re"
    "q_dial_lottery_flag\020\233\'\022\034\n\027e_mst_c2w_req_"
    "coin_rank\020\234\'\022\023\n\016e_mst_c2w_chat\020\235\'\022\027\n\022e_m"
    "st_c2w_exchange\020\236\'\022\034\n\027e_mst_c2w_buy_comm"
    "odity\020\237\'\022\031\n\024e_mst_c2w_add_friend\020\240\'\022\036\n\031e"
    "_mst_c2w_req_friend_list\020\241\'\022\034\n\027e_mst_c2w"
    "_remove_friend\020\242\'\022\034\n\027e_mst_c2w_search_fr"
    "iend\020\243\'\022$\n\037e_mst_c2w_receive_online_rewa"
    "rd\020\244\'\022\033\n\026e_mst_c2w_set_password\020\245\'\022\033\n\026e_"
    "mst_c2w_deposit_gold\020\246\'\022\030\n\023e_mst_c2w_dra"
    "w_gold\020\247\'\022!\n\034e_mst_c2w_change_photo_fram"
    "e\020\250\'\022\036\n\031e_mst_c2w_req_self_record\020\251\'\022\036\n\031"
    "e_mst_c2w_modify_password\020\252\'\022 \n\033e_mst_c2"
    "w_enter_friend_room\020\253\'\022\034\n\027e_mst_c2w_play"
    "er_notify\020\254\'\022\027\n\022e_mst_c2w_beneifts\020\255\'\022\031\n"
    "\024e_mst_c2w_req_notice\020\256\'\022\035\n\030e_mst_c2w_re"
    "q_bind_phone\020\257\'\022\036\n\031e_mst_c2w_req_verify_"
    "code\020\260\'\022 \n\033e_mst_c2w_get_friend_gameid\020\261"
    "\'\022#\n\036e_mst_c2w_finish_one_new_guild\020\262\'\022 "
    "\n\033e_mst_c2w_req_send_gift_log\020\263\'\022)\n$e_ms"
    "t_c2w_get_safe_box_security_code\020\264\'\022 \n\033e"
    "_mst_c2w_req_send_mail_log\020\265\'\022\036\n\031e_mst_c"
    "2w_remove_mail_log\020\266\'\022!\n\034e_mst_c2w_get_e"
    "xchange_state\020\267\'\022\033\n\026e_mst_c2w_get_gameli"
    "st\020\270\'\022&\n!e_mst_c2w_receive_recharge_rewa"
    "rd\020\271\'\022%\n e_mst_c2w_check_apple_order_for"
    "m\020\272\'\022 \n\033e_mst_c2w_req_recharge_rank\020\273\'\022\036"
    "\n\031e_mst_c2w_req_lottery_box\020\274\'\022\'\n\"e_mst_"
    "c2w_thankyou_exchange_ticket\020\275\'\022\036\n\031e_mst"
    "_c2w_req_coin_growth\020\276\'\022-\n(e_mst_c2w_pla"
    "yer_continuous_send_speaker\020\277\'\022&\n!e_mst_"
    "c2w_receive_activity_reward\020\300\'\022%\n e_mst_"
    "c2w_req_online_reward_info\020\301\'\022\034\n\027e_mst_c"
    "2w_get_questlist\020\302\'\022\"\n\035e_mst_c2w_receive"
    "_questreward\020\303\'\022 \n\033e_mst_c2w_star_lotter"
    "y_info\020\304\'\022\037\n\032e_mst_c2w_req_star_lottery\020"
    "\305\'\022\032\n\025e_mst_c2w_first_login\020\306\'\022 \n\033e_mst_"
    "c2w_inform_playerhead\020\307\'\022$\n\037e_mst_c2w_re"
    "q_month_card_reward\020\310\'\022#\n\036e_mst_c2w_ask_"
    "recharge_history\020\311\'\022\035\n\030e_mst_c2w_reset_p"
    "assword\020\312\'\022\036\n\031e_mst_c2w_req_safebox_log\020"
    "\313\'\022\035\n\030e_mst_c2w_check_password\020\314\'\022\027\n\022e_m"
    "st_c2w_shopping\020\315\'\022 \n\033e_mst_c2w_req_reli"
    "eve_phone\020\316\'\022!\n\034e_mst_c2w_req_relieve_ve"
    "rify\020\317\'\022\024\n\017e_mst_start_w2c\020\314:\022$\n\037e_mst_w"
    "2c_player_connect_result\020\315:\022\036\n\031e_mst_w2c"
    "_timesync_result\020\316:\022\036\n\031e_mst_w2c_asklogi"
    "n_result\020\317:\022 \n\033e_mst_w2c_enter_game_resu"
    "lt\020\320:\022\035\n\030e_mst_w2c_command_result\020\321:\022\'\n\""
    "e_mst_w2c_ask_check_payment_result\020\322:\022 \n"
    "\033e_mst_w2c_leave_game_result\020\323:\022&\n!e_mst"
    "_w2c_req_dial_lottery_result\020\324:\022\'\n\"e_mst"
    "_w2c_update_playerhead_result\020\325:\022%\n e_ms"
    "t_w2c_update_nickname_result\020\326:\022 \n\033e_mst"
    "_w2c_update_sex_result\020\327:\022&\n!e_mst_w2c_u"
    "pdate_signature_result\020\330:\022\037\n\032e_mst_w2c_g"
    "et_mails_result\020\331:\022%\n e_mst_w2c_recv_mai"
    "l_gifts_result\020\332:\022\037\n\032e_mst_w2c_send_mail"
    "_result\020\333:\022!\n\034e_mst_w2c_remove_mail_resu"
    "lt\020\334:\022#\n\036e_mst_w2c_fishlord_stat_result\020"
    "\335:\022\037\n\032e_mst_w2c_dice_stat_result\020\336:\022$\n\037e"
    "_mst_w2c_crocodile_stat_result\020\337:\022+\n&e_m"
    "st_w2c_req_dial_lottery_flag_result\020\340:\022#"
    "\n\036e_mst_w2c_req_coin_rank_result\020\341:\022\032\n\025e"
    "_mst_w2c_chat_result\020\342:\022\025\n\020e_mst_w2c_not"
    "ify\020\343:\022\036\n\031e_mst_w2c_exchange_result\020\344:\022#"
    "\n\036e_mst_w2c_buy_commodity_result\020\345:\022 \n\033e"
    "_mst_w2c_add_friend_result\020\346:\022%\n e_mst_w"
    "2c_req_friend_list_result\020\347:\022#\n\036e_mst_w2"
    "c_remove_friend_result\020\350:\022#\n\036e_mst_w2c_s"
    "earch_friend_result\020\351:\022+\n&e_mst_w2c_rece"
    "ive_online_reward_result\020\352:\022\"\n\035e_mst_w2c"
    "_set_password_result\020\353:\022\"\n\035e_mst_w2c_dep"
    "osit_gold_result\020\354:\022\037\n\032e_mst_w2c_draw_go"
    "ld_result\020\355:\022(\n#e_mst_w2c_change_photo_f"
    "rame_result\020\356:\022%\n e_mst_w2c_req_self_rec"
    "ord_result\020\357:\022%\n e_mst_w2c_modify_passwo"
    "rd_result\020\360:\022\'\n\"e_mst_w2c_enter_friend_r"
    "oom_result\020\361:\022#\n\036e_mst_w2c_player_notify"
    "_result\020\362:\022\036\n\031e_mst_w2c_benefits_result\020"
    "\363:\022 \n\033e_mst_w2c_req_notice_result\020\364:\022\032\n\025"
    "e_mst_w2c_player_kick\020\365:\022$\n\037e_mst_w2c_re"
    "q_bind_phone_result\020\366:\022%\n e_mst_w2c_req_"
    "verify_code_result\020\367:\022\'\n\"e_mst_w2c_get_f"
    "riend_gameid_result\020\370:\022*\n%e_mst_w2c_fini"
    "sh_one_new_guild_result\020\371:\022!\n\034e_mst_w2c_"
    "accept_gift_notify\020\372:\022\'\n\"e_mst_w2c_req_s"
    "end_gift_log_result\020\373:\0220\n+e_mst_w2c_get_"
    "safe_box_security_code_result\020\374:\022\'\n\"e_ms"
    "t_w2c_req_send_mail_log_result\020\375:\022%\n e_m"
    "st_w2c_remove_mail_log_result\020\376:\022(\n#e_ms"
    "t_w2c_get_exchange_state_result\020\377:\022\"\n\035e_"
    "mst_w2c_get_gamelist_result\020\200;\022-\n(e_mst_"
    "w2c_receive_recharge_reward_result\020\201;\022\'\n"
    "\"e_mst_w2c_req_recharge_rank_result\020\202;\022%"
    "\n e_mst_w2c_req_lottery_box_result\020\203;\022.\n"
    ")e_mst_w2c_thankyou_exchange_ticket_resu"
    "lt\020\204;\022%\n e_mst_w2c_req_coin_growth_resul"
    "t\020\205;\0224\n/e_mst_w2c_player_continuous_send"
    "_speaker_result\020\206;\022-\n(e_mst_w2c_receive_"
    "activity_reward_result\020\207;\022,\n\'e_mst_w2c_r"
    "eq_online_reward_info_result\020\210;\022#\n\036e_mst"
    "_w2c_get_questlist_result\020\211;\022!\n\034e_mst_w2"
    "c_questreward_result\020\212;\022\033\n\026e_mst_w2c_cha"
    "nge_quest\020\213;\022\'\n\"e_mst_w2c_star_lottery_i"
    "nfo_result\020\214;\022&\n!e_mst_c2w_req_star_lott"
    "ery_result\020\215;\022!\n\034e_mst_w2c_first_login_r"
    "esult\020\216;\022\'\n\"e_mst_w2c_inform_playerhead_"
    "result\020\217;\022+\n&e_mst_w2c_req_month_card_re"
    "ward_result\020\220;\022(\n#e_mst_w2c_ask_check_pa"
    "yment_result2\020\221;\022\036\n\031e_mst_w2c_open_first"
    "_gift\020\222;\022&\n!e_mst_w2c_recharge_history_r"
    "esult\020\223;\022$\n\037e_mst_w2c_reset_password_res"
    "ult\020\224;\022%\n e_mst_w2c_req_safebox_log_resu"
    "lt\020\225;\022$\n\037e_mst_w2c_check_password_result"
    "\020\226;\022\036\n\031e_mst_w2c_shopping_result\020\227;\022\'\n\"e"
    "_mst_w2c_req_relieve_phone_result\020\230;\022(\n#"
    "e_mst_w2c_req_relieve_verify_result\020\231;\022\026"
    "\n\021e_mst_cwend_index\020\220N", 5342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client2world_msg_type.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_client2world_5fmsg_5ftype_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_client2world_5fmsg_5ftype_2eproto {
  StaticDescriptorInitializer_client2world_5fmsg_5ftype_2eproto() {
    protobuf_AddDesc_client2world_5fmsg_5ftype_2eproto();
  }
} static_descriptor_initializer_client2world_5fmsg_5ftype_2eproto_;
const ::google::protobuf::EnumDescriptor* e_server_msg_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_server_msg_type_descriptor_;
}
bool e_server_msg_type_IsValid(int value) {
  switch(value) {
    case 5000:
    case 5001:
    case 5002:
    case 5003:
    case 5004:
    case 5005:
    case 5006:
    case 5007:
    case 5008:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5013:
    case 5014:
    case 5015:
    case 5016:
    case 5017:
    case 5018:
    case 5019:
    case 5020:
    case 5021:
    case 5022:
    case 5023:
    case 5024:
    case 5025:
    case 5026:
    case 5027:
    case 5028:
    case 5029:
    case 5030:
    case 5031:
    case 5032:
    case 5033:
    case 5034:
    case 5035:
    case 5036:
    case 5037:
    case 5038:
    case 5039:
    case 5040:
    case 5041:
    case 5042:
    case 5043:
    case 5044:
    case 5045:
    case 5046:
    case 5047:
    case 5048:
    case 5049:
    case 5050:
    case 5051:
    case 5052:
    case 5053:
    case 5054:
    case 5055:
    case 5056:
    case 5057:
    case 5058:
    case 5059:
    case 5060:
    case 5061:
    case 5062:
    case 5063:
    case 5064:
    case 5065:
    case 5066:
    case 5067:
    case 5068:
    case 5069:
    case 5070:
    case 5071:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7508:
    case 7509:
    case 7510:
    case 7511:
    case 7512:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7531:
    case 7532:
    case 7533:
    case 7534:
    case 7535:
    case 7536:
    case 7537:
    case 7538:
    case 7539:
    case 7540:
    case 7541:
    case 7542:
    case 7543:
    case 7544:
    case 7545:
    case 7546:
    case 7547:
    case 7548:
    case 7549:
    case 7550:
    case 7551:
    case 7552:
    case 7553:
    case 7554:
    case 7555:
    case 7556:
    case 7557:
    case 7558:
    case 7559:
    case 7560:
    case 7561:
    case 7562:
    case 7563:
    case 7564:
    case 7565:
    case 7566:
    case 7567:
    case 7568:
    case 7569:
    case 7570:
    case 7571:
    case 7572:
    case 7573:
    case 7574:
    case 7575:
    case 7576:
    case 7577:
    case 10000:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client2world_protocols

// @@protoc_insertion_point(global_scope)
